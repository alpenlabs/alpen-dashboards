name: Lint

on:
  pull_request:
  merge_group:
  push:
    branches: [main]

env:
  CARGO_TERM_COLOR: always

permissions: {}

jobs:
  clippy:
    name: Run clippy on crates
    runs-on: ubuntu-latest
    timeout-minutes: 60
    permissions:
      contents: read
    defaults:
      run:
        working-directory: backend
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          persist-credentials: false

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@b95584d8105b9ab200e15821fa671848cf2b7017 # nightly

      - name: Rust cache
        uses: Swatinem/rust-cache@98c8021b550208e191a6a3145459bfc9fb29c4c0 # v2
        with:
          cache-on-failure: true

      - name: Run clippy
        run: cargo clippy --examples --tests --benches --all-features --all-targets --locked
        env:
          RUSTFLAGS: -D warnings

  fmt:
    name: Check code formatting
    runs-on: ubuntu-latest
    timeout-minutes: 30
    permissions:
      contents: read
    defaults:
      run:
        working-directory: backend
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          persist-credentials: false

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@b95584d8105b9ab200e15821fa671848cf2b7017 # nightly
        with:
          components: rustfmt

      - name: Check Rust formatting
        run: cargo fmt --all --check

  taplo:
    name: Lint and check formatting of TOML files
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          persist-credentials: false

      - name: Install latest taplo
        run: |
          curl -fsSL https://github.com/tamasfe/taplo/releases/latest/download/taplo-full-linux-x86_64.gz \
            | gzip -d - | install -m 755 /dev/stdin /usr/local/bin/taplo

      - name: Run taplo lint
        run: |
          taplo lint

      - name: Run taplo format check
        run: |
          taplo fmt --check

  prettier:
    name: Prettier (frontend/)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          persist-credentials: false
      - name: Install Node.js
        uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5.0.0
        with:
          node-version: 18
      - name: Install dependencies
        run: npm ci
      - name: Run Prettier check
        run: npm run format:check

  eslint:
    name: ESLint (frontend/)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          persist-credentials: false
      - name: Install Node.js
        uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5.0.0
        with:
          node-version: 18
      - name: Install dependencies
        run: npm ci
      - name: Run ESLint
        run: npm run lint

  lint-success:
    name: Check that lints passed
    runs-on: ubuntu-latest
    if: always()
    needs:
      - clippy
      - fmt
      - taplo
      - prettier
      - eslint
    timeout-minutes: 30
    steps:
      - name: Decide whether the needed jobs succeeded or failed
        uses: re-actors/alls-green@05ac9388f0aebcb5727afa17fcccfecd6f8ec5fe # release/v1
        with:
          jobs: ${{ toJSON(needs) }}